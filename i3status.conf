general {
        output_format = "none"
        colors = true
        interval = 5
}

order += "cpu_temperature 0"
order += "cpu_temperature 1"
order += "cpu_temperature 2"
order += "load"
order += "memory"
order += "disk /"
order += "disk /home"
# order += "wireless wlan0"
# order += "ethernet eth0"
order += "volume master"
order += "tztime local"
order += "battery 0"
# order += "ipv6"
# order += "run_watch DHCP"
# order += "run_watch VPNC"
# order += "path_exists VPN"
# order += "tztime berlin"


# To find parameters use:
# find /sys/devices/platform/ -iname '*input'
cpu_temperature 0 {
        format = "ï“¤"
        path = "/sys/devices/platform/coretemp.0/hwmon/hwmon2/temp1_input"
        max_threshold = 55
        format_above_threshold = "0: %degrees Â°C"
}

cpu_temperature 1 {
        format = "ï“¤"
        path = "/sys/devices/platform/coretemp.0/hwmon/hwmon2/temp2_input"
        max_threshold = 55
        format_above_threshold = "1: %degrees Â°C"
}

cpu_temperature 2 {
        format = "ï“¤"
        path = "/sys/devices/platform/coretemp.0/hwmon/hwmon2/temp3_input"
        max_threshold = 55
        format_above_threshold = "2: %degrees Â°C"
}

load {
        # format = "%5min"
        format = "ïƒ¤"
        max_threshold = "3.0"
        format_above_threshold = "ïƒ¤ %1min "
}

memory {
        format = "ïˆ‰"
        threshold_degraded = "20%"
        format_degraded = "ï“° %free"
}

## Disk /
disk "/" {
    format = "ï„˜"
    low_threshold = 10
    threshold_type = gbytes_avail
    prefix_type = binary
    format_below_threshold = "/ %free"
}

## Disk /home
disk "/home" {
    format = "ï„˜"
    low_threshold = 100
    threshold_type = gbytes_avail
    prefix_type = binary
    format_below_threshold = "/home %free"
}


wireless wlan0 {
        format_up = "W: (%quality at %essid, %bitrate) %ip"
        format_down = "W: down"
}

ethernet eth0 {
        format_up = "E: %ip (%speed)"
        format_down = "E: down"
}

battery 0 {
        format = "%status %percentage %remaining %emptytime"
        format_down = "ï‡¦"
        status_chr = "âš¡ CHR"
        status_bat = "ðŸ”‹T"
        status_unk = "ï‡¦?"
        status_full = "ðŸ”‹"
        path = "/sys/class/power_supply/ADP1/power/runtime_active_time"
        # path = "/sys/class/power_supply/BAT%d/uevent"
        low_threshold = 10
}

## audio volume sensor
volume master {
    separator_block_width = 25
    format = "â™ª %volume"
    format_muted = "â™ª muted (%volume)"
    device = "default"
    mixer = "Master"
    mixer_idx = 0
}

tztime local {
        format = "%Y-%m-%d | %H:%M"
        hide_if_equals_localtime = false
}

read_file uptime {
        path = "/proc/uptime"
}

# Not used
run_watch DHCP {
        pidfile = "/var/run/dhclient*.pid"
}

run_watch VPNC {
        # file containing the PID of a vpnc process
        pidfile = "/var/run/vpnc/pid"
}

path_exists VPN {
        # path exists when a VPN tunnel launched by nmcli/nm-applet is active
        path = "/proc/sys/net/ipv4/conf/tun0"
}

tztime berlin {
        format = "%Y-%m-%d %H:%M:%S %Z"
        timezone = "Europe/Berlin"
}